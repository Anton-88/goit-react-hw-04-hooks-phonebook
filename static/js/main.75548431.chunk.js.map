{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactList.js","App.js","index.js"],"names":["module","exports","ContactForm","addContact","contactNameID","uuidv4","contactNumberID","useState","name","setName","number","setNumber","handleChange","e","currentTarget","value","resetForm","onSubmit","preventDefault","contact","id","className","styles","contact_form_container","contact_form_item","contact_form_label","htmlFor","type","placeholder","onChange","pattern","title","required","contact_add_btn","disabled","length","Filter","onFilterChange","filter_container","ContactList","filteredContacts","onListChange","contact_list","map","contact_list_item","contact_list_button","onClick","App","JSON","parse","localStorage","getItem","contacts","setContacts","filter","setFilter","useEffect","window","setItem","stringify","newContact","includes","alert","prev","target","tempContacts","toLowerCase","filteredItems","itemId","item","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8IACAA,EAAOC,QAAU,CAAC,uBAAyB,4CAA4C,kBAAoB,uCAAuC,mBAAqB,wCAAwC,gBAAkB,uC,kBCAjOD,EAAOC,QAAU,CAAC,aAAe,kCAAkC,kBAAoB,uCAAuC,oBAAsB,2C,oCCApJD,EAAOC,QAAU,CAAC,iBAAmB,mC,8JCG9B,SAASC,EAAT,GAAsC,IAAfC,EAAc,EAAdA,WACtBC,EAAgBC,cAChBC,EAAkBD,cAExB,EAAwBE,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA4BF,mBAAS,IAArC,mBAAOG,EAAP,KAAeC,EAAf,KAEMC,EAAe,SAACC,GACpB,MAAwBA,EAAEC,cAAlBN,EAAR,EAAQA,KAAMO,EAAd,EAAcA,MACd,OAAQP,GACN,IAAK,OACHC,EAAQM,GACR,MACF,IAAK,SACHJ,EAAUI,GACV,MACF,QACE,SAeAC,EAAY,WAChBP,EAAQ,IACRE,EAAU,KAGZ,OACE,sBAAMM,SAjBa,SAACJ,GACpBA,EAAEK,iBACF,IAAMC,EAAU,CACdC,GAAIf,cACJG,OACAE,UAEFP,EAAWgB,GACXH,KASA,SACE,sBAAKK,UAAWC,IAAOC,uBAAvB,UACE,sBAAKF,UAAWC,IAAOE,kBAAvB,UACE,uBAAOH,UAAWC,IAAOG,mBAAoBC,QAAStB,EAAtD,2BAGA,uBACEgB,GAAIhB,EACJuB,KAAK,OACLnB,KAAK,OACLoB,YAAY,yBACZC,SAAUjB,EACVG,MAAOP,EACPsB,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,OAGZ,sBAAKX,UAAWC,IAAOE,kBAAvB,UACE,uBACEH,UAAWC,IAAOG,mBAClBC,QAASpB,EAFX,6BAMA,uBACEc,GAAId,EACJqB,KAAK,MACLnB,KAAK,SACLoB,YAAY,2BACZC,SAAUjB,EACVG,MAAOL,EACPoB,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,OAGZ,wBACEL,KAAK,SACLN,UAAWC,IAAOW,gBAClBC,UAAW1B,GAAQE,EAAOyB,OAAS,EAHrC,8B,qBC3ED,SAASC,EAAT,GAA4C,IAA1BrB,EAAyB,EAAzBA,MAAOsB,EAAkB,EAAlBA,eAC9B,OACE,mCACE,sBAAKhB,UAAWC,IAAOgB,iBAAvB,UACE,qDACA,uBAAOX,KAAK,OAAOZ,MAAOA,EAAOc,SAAUQ,S,oBCL5C,SAASE,EAAT,GAA0D,IAAnCC,EAAkC,EAAlCA,iBAAkBC,EAAgB,EAAhBA,aAC9C,OACE,oBAAIpB,UAAWC,IAAOoB,aAAtB,SACGF,EAAiBG,KAAI,gBAAGnC,EAAH,EAAGA,KAAME,EAAT,EAASA,OAAQU,EAAjB,EAAiBA,GAAjB,OACpB,qBAAIC,UAAWC,IAAOsB,kBAAtB,UACE,8BACGpC,EADH,KACWE,KAEX,wBACEW,UAAWC,IAAOuB,oBAClBlB,KAAK,SACLmB,QAAS,kBAAML,EAAarB,IAH9B,6BAJ4Cf,oBCAvC,SAAS0C,IACtB,MAAgCxC,oBAAS,WAAO,IAAD,EAC7C,iBACEyC,KAAKC,MAAMC,aAAaC,QAAQ,oBADlC,QACkD,CAC9C,CAAE/B,GAAI,OAAQZ,KAAM,gBAAiBE,OAAQ,aAC7C,CAAEU,GAAI,OAAQZ,KAAM,iBAAkBE,OAAQ,aAC9C,CAAEU,GAAI,OAAQZ,KAAM,gBAAiBE,OAAQ,aAC7C,CAAEU,GAAI,OAAQZ,KAAM,iBAAkBE,OAAQ,iBANpD,mBAAO0C,EAAP,KAAiBC,EAAjB,KAWA,EAA4B9C,mBAAS,IAArC,mBAAO+C,EAAP,KAAeC,EAAf,KAEAC,qBAAU,WACRC,OAAOP,aAAaQ,QAAQ,WAAYV,KAAKW,UAAUP,MACtD,CAACA,IAuBJ,OACE,qCACE,2CACA,cAAClD,EAAD,CAAaC,WAxBE,SAACyD,GACdR,EAAST,KAAI,SAACxB,GAAD,OAAaA,EAAQX,QAAMqD,SAASD,EAAWpD,MAC9DsD,MAAM,GAAD,OAAIF,EAAWpD,KAAf,sCAEL6C,GAAY,SAACU,GAAD,4BAAcA,GAAd,CAAoBH,QAoBKR,SAAUA,IAC/C,0CACA,gCACE,cAAChB,EAAD,CAAQrB,MAAOuC,EAAQjB,eAnBR,SAACxB,GACpB0C,EAAU1C,EAAEmD,OAAOjD,UAmBf,cAACwB,EAAD,CACEC,iBAjBc,WACpB,IAAMyB,EAAeX,EAAOY,cAC5B,OAAOd,EAASE,QAAO,SAACzC,GAAD,OAAOA,EAAEL,KAAK0D,cAAcL,SAASI,MAepCE,GAClB1B,aAbW,SAAC2B,GAClBf,GAAY,SAACU,GAAD,OAAUA,EAAKT,QAAO,SAACe,GAAD,OAAUA,EAAKjD,KAAOgD,iBCvC5DE,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.75548431.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact_form_container\":\"ContactForm_contact_form_container__32Bez\",\"contact_form_item\":\"ContactForm_contact_form_item__JpIzR\",\"contact_form_label\":\"ContactForm_contact_form_label__1FltL\",\"contact_add_btn\":\"ContactForm_contact_add_btn__1ZWER\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact_list\":\"ContactList_contact_list__1R5Vw\",\"contact_list_item\":\"ContactList_contact_list_item__1BNdE\",\"contact_list_button\":\"ContactList_contact_list_button__dzkzU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter_container\":\"Filter_filter_container__24r7X\"};","import styles from \"./ContactForm.module.css\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { useState } from \"react\";\n\nexport function ContactForm({ addContact }) {\n  const contactNameID = uuidv4();\n  const contactNumberID = uuidv4();\n\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n\n  const handleChange = (e) => {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case \"name\":\n        setName(value);\n        break;\n      case \"number\":\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const contact = {\n      id: uuidv4(),\n      name,\n      number,\n    };\n    addContact(contact);\n    resetForm();\n  };\n\n  const resetForm = () => {\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <div className={styles.contact_form_container}>\n        <div className={styles.contact_form_item}>\n          <label className={styles.contact_form_label} htmlFor={contactNameID}>\n            Contact name:\n          </label>\n          <input\n            id={contactNameID}\n            type=\"text\"\n            name=\"name\"\n            placeholder=\"Enter contact name ...\"\n            onChange={handleChange}\n            value={name}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n          />\n        </div>\n        <div className={styles.contact_form_item}>\n          <label\n            className={styles.contact_form_label}\n            htmlFor={contactNumberID}\n          >\n            Contact number:\n          </label>\n          <input\n            id={contactNumberID}\n            type=\"tel\"\n            name=\"number\"\n            placeholder=\"Enter contact number ...\"\n            onChange={handleChange}\n            value={number}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n          />\n        </div>\n        <button\n          type=\"submit\"\n          className={styles.contact_add_btn}\n          disabled={!name || number.length < 5}\n        >\n          Add contact\n        </button>\n      </div>\n    </form>\n  );\n}\n","import React from \"react\";\nimport { PropTypes } from \"prop-types\";\nimport styles from \"./Filter.module.css\";\n\nexport function Filter({ value, onFilterChange }) {\n  return (\n    <>\n      <div className={styles.filter_container}>\n        <p>Find contact by name</p>\n        <input type=\"text\" value={value} onChange={onFilterChange} />\n      </div>\n    </>\n  );\n}\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onFilterChange: PropTypes.func.isRequired,\n};\n","import { PropTypes } from \"prop-types\";\nimport styles from \"./ContactList.module.css\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nexport function ContactList({ filteredContacts, onListChange }) {\n  return (\n    <ul className={styles.contact_list}>\n      {filteredContacts.map(({ name, number, id }) => (\n        <li className={styles.contact_list_item} key={uuidv4()}>\n          <p>\n            {name}: {number}\n          </p>\n          <button\n            className={styles.contact_list_button}\n            type=\"button\"\n            onClick={() => onListChange(id)}\n          >\n            Delete number\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nContactList.propTypes = {\n  state: PropTypes.arrayOf(PropTypes.any).isRequired,\n  onListChange: PropTypes.func.isRequired,\n};\n","import \"./App.css\";\nimport { useEffect, useState } from \"react\";\nimport { ContactForm } from \"./components/ContactForm/ContactForm\";\nimport { Filter } from \"./components/Filter/Filter\";\nimport { ContactList } from \"./components/ContactList/ContactList\";\nimport { LSManager } from \"./hooks/localStorageManagement\";\nimport styles from \"./App.css\";\n\nexport default function App() {\n  const [contacts, setContacts] = useState(() => {\n    return (\n      JSON.parse(localStorage.getItem(\"contacts\")) ?? [\n        { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n        { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n        { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n        { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n      ]\n    );\n  });\n\n  const [filter, setFilter] = useState(\"\");\n\n  useEffect(() => {\n    window.localStorage.setItem(\"contacts\", JSON.stringify(contacts));\n  }, [contacts]);\n\n  const addContact = (newContact) => {\n    if (contacts.map((contact) => contact.name).includes(newContact.name)) {\n      alert(`${newContact.name} is in your contacts list already`);\n    } else {\n      setContacts((prev) => [...prev, newContact]);\n    }\n  };\n\n  const filterChange = (e) => {\n    setFilter(e.target.value);\n  };\n\n  const filteredItems = () => {\n    const tempContacts = filter.toLowerCase();\n    return contacts.filter((e) => e.name.toLowerCase().includes(tempContacts));\n  };\n\n  const deleteItem = (itemId) => {\n    setContacts((prev) => prev.filter((item) => item.id !== itemId));\n  };\n\n  return (\n    <>\n      <h1>PhoneBook</h1>\n      <ContactForm addContact={addContact} contacts={contacts} />\n      <h2>Contacts</h2>\n      <div>\n        <Filter value={filter} onFilterChange={filterChange} />\n        <ContactList\n          filteredContacts={filteredItems()}\n          onListChange={deleteItem}\n        />\n      </div>\n    </>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}